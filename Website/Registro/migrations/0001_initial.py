# Generated by Django 2.2.6 on 2019-10-17 04:42

import Registro.models
import Registro.storage
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_voluntario', models.BooleanField(default=False)),
                ('is_organizador', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=256, verbose_name='Nombre del Evento')),
                ('fecha', models.DateField(verbose_name='Fecha del Evento')),
                ('lugar', models.CharField(max_length=256, verbose_name='Lugar del Evento')),
                ('activo', models.NullBooleanField(default=True)),
                ('descripcion', models.TextField(verbose_name='Descripción del Evento')),
                ('num_equipos', models.PositiveIntegerField(default=1, verbose_name='Número de equipos en el evento')),
                ('url_pagina', models.URLField(blank=True, max_length=300, null=True, verbose_name='Sitio Web del Evento')),
                ('foto', models.ImageField(default='Evento/default.jpg', storage=Registro.storage.OverwriteStorage(), upload_to=Registro.models.id_img, verbose_name='Foto del evento')),
            ],
            options={
                'db_table': 'evento',
                'ordering': ['-activo', 'fecha', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Institucion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telefono', models.CharField(max_length=10, verbose_name='Teléfono')),
                ('nombre', models.CharField(max_length=256, verbose_name='Nombre de la Institución')),
                ('ciudad', models.CharField(max_length=256, verbose_name='Ciudad')),
                ('tipo_organizacion', models.IntegerField(choices=[(0, 'UNAM'), (1, 'Gobierno'), (2, 'ONG')])),
                ('url_pagina', models.URLField(null=True, verbose_name='Sitio Web de la Institución')),
                ('direccion', models.TextField(verbose_name='Dirección')),
            ],
            options={
                'db_table': 'institucion',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Voluntario',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nombre', models.CharField(max_length=256, verbose_name='Nombre Completo')),
                ('telefono', models.CharField(max_length=10, verbose_name='Teléfono Móvil')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('num_cuenta_unam', models.CharField(max_length=9, unique=True, verbose_name='Número de Cuenta UNAM')),
                ('total_horas', models.PositiveIntegerField(default=0, verbose_name='Horas de voluntariado')),
                ('foto', models.ImageField(default='Voluntario/default.jpg', storage=Registro.storage.OverwriteStorage(), upload_to=Registro.models.id_img, verbose_name='Foto de Perfil')),
            ],
            options={
                'db_table': 'voluntario',
                'ordering': ['-total_horas', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Participacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horas', models.PositiveIntegerField(default=0, verbose_name='Horas Participadas')),
                ('comentario_voluntario', models.TextField(blank=True, null=True)),
                ('comentario_organizador', models.TextField(blank=True, null=True)),
                ('capitan', models.BooleanField(default=False, verbose_name='Verdadero si es Capitan')),
                ('equipo', models.PositiveIntegerField(default=1, verbose_name='Equipo al que pertenece')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Registro.Evento')),
                ('voluntario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Registro.Voluntario')),
            ],
            options={
                'db_table': 'participacion',
                'ordering': ['equipo', '-capitan'],
            },
        ),
        migrations.CreateModel(
            name='Organizador',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nombre', models.CharField(max_length=256, verbose_name='Nombre Completo')),
                ('tel_movil', models.CharField(max_length=10, verbose_name='Teléfono Móvil')),
                ('tel_oficina', models.CharField(blank=True, max_length=10, null=True, verbose_name='Teléfono Oficina')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('foto', models.ImageField(default='Organizador/default.jpg', storage=Registro.storage.OverwriteStorage(), upload_to=Registro.models.id_img, verbose_name='Foto de Perfil')),
                ('institucion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Registro.Institucion')),
            ],
            options={
                'db_table': 'organizador',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='evento',
            name='organizador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Registro.Organizador'),
        ),
    ]
